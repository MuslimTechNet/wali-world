{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/pages/Index/Index.svelte",
    "../src/pages/Email/Email.svelte",
    "../src/pages/MakeProfile/MakeProfile.svelte",
    "../src/pages/Profiles/Profiles.svelte",
    "../src/MakeAProfileForm/MakeAProfileForm.svelte",
    "../src/LoginOrRegister/LoginOrRegister.svelte",
    "../src/Frame/Frame.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Frame from '../../Frame/Frame.svelte';\n    import LoginOrRegister from '../../LoginOrRegister/LoginOrRegister.svelte';\n    import MakeAProfileForm from '../../MakeAProfileForm/MakeAProfileForm.svelte';\n    let iam = 'Man';\n    let lookingFor = 'Wali'\n    let makeAProfileClicked = false;\n\n    $:{\n        lookingFor = iam=='Man'?'Wali':'Man';\n    }\n    let loggedIn = false;\n    \n    let profileSubmitted = false;\n         \n</script>\n<style>\n.make-a-profile{\n        display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n</style>\n<Frame on:loggedIn={()=>{\n    loggedIn = true;\n}}>\n<form action='/profiles' >\n    <div class='i-am'>\n        <label for=\"i-am\">I am a</label>\n        <select id='i-am' name=\"i-am\" bind:value={iam}>\n            <option value='Man'>Man</option>\n            <option value='Wali'>Wali</option>\n        </select> \n        <label for=\"looking-for\" name=\"looking-for\">looking for a </label>\n        <select id='looking-for' bind:value={lookingFor}>\n            <option value='Man'>Man</option>\n            <option value='Wali'>Wali</option>\n        </select>\n    </div>\n    <div class='search'>\n        <button>Search!</button>\n    </div>\n    </form>\n<div class='or'>-- Or --</div>\n<div class='make-a-profile'>\n    {#if makeAProfileClicked}\n        {#if loggedIn}\n            {#if profileSubmitted}\n                Thank you for submitting!\n                <a href=\"/profiles\">See all profiles</a>\n            {:else}\n                <MakeAProfileForm on:submitSuccess={e=>{\n                    profileSubmitted = true;\n                }} on:submitError={e=>{\n\n                }}/>\n            {/if}\n        {:else}\n            <LoginOrRegister \n                loginUrl={'/login/submit'} \n                emailCheckUrl={'/emailcheck'}\n                registerUrl={'/register/submit'}\n                \n                loginErrors={[\n                    e=>e.data=='This user does not exist'?e.data:false,\n                    e=>e.data=='The password is incorrect'?e.data:false,\n                    e=>e.data=='A weird error was thrown'?e.data:false\n                ]}\n                registerErrors={[\n                    e=>{return e.data=='Username is taken'?e.data:false}\n                ]}\n                confirmPasswordErrors={[\n                    e=>{return e.data=='A weird error was thrown'?e.data:false}\n                ]}\n\n                on:login={e=>{\n                    loggedIn = true;\n                }}\n\n            />\n        {/if}\n    {:else}\n        \n    \n\n        <button on:click={()=>makeAProfileClicked = true}>Make a profile</button>\n        <div>So that others can search for you!</div>\n    {/if}\n    \n</div>\n</Frame>\n",
    "<script>\n    import Frame from '../../Frame/Frame.svelte';\n    import axios from 'axios';\n    let to='', message='';\n\n    function send_email(){\n        axios.get('/send',{\n            params:{\n                to\n            }\n        }).then(function (response) {\n             if(response.data==\"sent\"){\n                 message = `Email is been sent at ${to} . Please check inbox !`;\n                \n            }\n        })\n    }\n    \n\n</script>\n\n<style>\n#container\n{\n    margin-left:400px;\n    margin-top:50px;\n}\n#to,#subject,#content\n{\n    font-family: \"Segoe UI\";\n    font-size:18px;\n    width:530px;\n}\nh1\n{\n    font-family: \"Segoe UI\";\n    font-size:40px;\n    color: #3b5998;\n}\np\n{\n    color:green;\n}\n#send_email\n{\n    font-size:15px;\n    font-family: \"Segoe UI\";\n}\n#message\n{\n    font-size:18px;\n}\n</style>\n<Frame>\n<div id=\"container\">\n<h1>Email-verification System in Node.js</h1>\n<input type=\"text\" id=\"to\" bind:value={to} placeholder=\"Enter E-mail which you want to verify\"><br>\n<button id=\"send_email\" on:click={send_email}>Send Email</button><br>\n<span id=\"message\">{message}</span>\n</div>\n</Frame>\n",
    "<script>\n    import Frame from '../../Frame/Frame.svelte';\n</script>\n<style>\n.youare{\n    margin-bottom:5px;\n}\n\nform>*{\n    display:block;\n    margin-bottom:15px;\n}\n\ntextarea{\n    width:100%;\n    max-width:500px;\n    height:300px;\n}\n\n\n</style>\n<Frame>\n <form action=\"/make-profile/submit\" method=\"post\">\n                <div>\n                    <div class='youare'>You are:</div>\n                    <label><input type=\"radio\" name=\"youare\" value=\"searchingforwife\">Searching for a wife<br></label>\n                    <label><input type=\"radio\" name=\"youare\" value=\"wali\">A wali searching for a suitor<br></label>\n                </div>\n                <label>\n                    Name\n                    <input name=\"name\"/>\n                </label>\n                <label>\n                    <div>Description of yourself or the sister you are trying to marry off</div>\n                    <textarea name=\"descriptionofyou\" placeholder=\"location, religiosity, culture, vague description of looks, personality\"></textarea>\n                </label>\n                <label>\n                        <div>Description of what you are looking for in a spouse</div>\n                        <textarea name=\"descriptionofspouse\" placeholder=\"location, religiosity, culture, vague description of looks, personality\"></textarea>\n                    </label>\n               <button>Submit</button>\n            </form>\n</Frame>\n",
    "<script>\n    import Frame from '../../Frame/Frame.svelte';\n    import axios from 'axios';\n    \n    let profiles = {\n        suitorProfiles:[],\n        waliProfiles:[]\n    };\n\n    axios.get('/api/profiles').then(results=>{\n        console.log(results.data);\n        profiles = results.data;\n    }).catch()\n\n</script>\n<style>\n\nh2{\n    text-align:center;\n}\n\n.profiles{\n    display:flex;\n    flex-wrap:wrap;\n}\n\n.profile{\n    box-sizing:border-box;\n    width:50%;\n    border:1px solid white;\n    padding:3px;\n}\n\n</style>\n<Frame>\n    <div class='profiles'>\n        {#each profiles.suitorProfiles as profile}\n            <div class='profile'>\n                <h2>Bio</h2>\n                <p>{profile.bio}</p>\n                <h2>Looking for</h2>\n                <p>{profile.looking_for}</p>\n            </div>\n        {/each}\n        {#each profiles.waliProfiles as profile}\n            <div class='profile'>\n                <h2>Bio</h2>\n                <p>{profile.bio}</p>\n                <h2>Looking for</h2>\n                <p>{profile.looking_for}</p>\n            </div>\n        {/each}\n    </div>\n</Frame>\n",
    "<style>\n.youare{\n    margin-bottom:5px;\n}\n\nform>*{\n    display:block;\n    margin-bottom:15px;\n}\n\ntextarea{\n    width:100%;\n    max-width:500px;\n    height:300px;\n}\n\n\n</style>\n<script>\n    import AjaxForm from '../AjaxForm.svelte';\n    import {createEventDispatcher} from 'svelte';\n    const dispatch = createEventDispatcher();\n    function handleSuccess(){\n        dispatch('submitSuccess');\n    }\n\n    function handleError(){\n       dispatch('submitError');\n    }\n\n    let name = '';\n    let descriptionofyou='';\n    let descriptionofspouse='';\n\n\n</script>\n <AjaxForm action=\"/make-profile/submit\" values={{name,descriptionofyou,descriptionofspouse}} on:success={handleSuccess} on:error={handleError} customErrorDetection={e=>{\n     return e.data==='A weird error was thrown'\n }}>\n                <div>\n                    <div class='youare'>You are:</div>\n                    <label><input type=\"radio\" name=\"youare\" value=\"searchingforwife\">Searching for a wife<br></label>\n                    <label><input type=\"radio\" name=\"youare\" value=\"wali\">A wali searching for a suitor<br></label>\n                </div>\n                <label>\n                    Name\n                    <input name=\"name\" bind:value={name}/>\n                </label>\n                <label>\n                    <div>Description of yourself or the sister you are trying to marry off</div>\n                    <textarea name=\"descriptionofyou\" placeholder=\"location, religiosity, culture, vague description of looks, personality\" bind:value={descriptionofyou}></textarea>\n                </label>\n                <label>\n                        <div>Description of what you are looking for in a spouse</div>\n                        <textarea name=\"descriptionofspouse\" placeholder=\"location, religiosity, culture, vague description of looks, personality\" bind:value={descriptionofspouse}></textarea>\n                    </label>\n               <button>Submit</button>\n            </AjaxForm>\n",
    "<script>\n    import axios from 'axios';\n    import AjaxForm from '../AjaxForm.svelte';\n\n\n    import {createEventDispatcher} from 'svelte';\n    const dispatcher = createEventDispatcher();\n    export let loginUrl;\n    export let emailCheckUrl;\n    export let registerUrl;\n\n    export let loginErrors;\n    export let registerErrors;\n    export let confirmPasswordErrors;\n\n    const LOGIN_REGISTER = 'LOGIN_REGISTER';\n    const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n    const CONFIRM_PASSWORD = 'CONFIRM_PASSWORD';\n    const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\n\n    const screenStates = [LOGIN_REGISTER,LOGIN_SUCCESS,CONFIRM_PASSWORD,REGISTER_SUCCESS]\n    \n    let currentScreen = LOGIN_REGISTER;\n\n    let email = '';\n    let password = '';\n    let passwordConfirmation = '';\n    let verifyPassword = '';\n    let errors = [];\n    let confirmPasswordScreen = false;\n    let verifyEmailScreen = false;\n    \n    function login(){\n\n        errors = [];\n        axios.post(loginUrl,{\n            ['contact-info']:email,\n            password:password\n        },{\n            withCredentials:true\n        }).then(e=>{\n\n            loginErrors.forEach(error=>{\n                const err = error(e);\n                if (err) errors = [...errors,err]\n            })\n\n            if (!errors.length){\n                currentScreen = LOGIN_SUCCESS;\n                dispatcher('login');\n            }\n\n        })\n    }\n\n    function register(){\n        if (!email.length) errors=[...errors,'Please enter an email'];\n        if (!password.length) errors=[...errors,'Please enter a password'];\n\n        axios.post(emailCheckUrl,{\n            email\n        },{\n            withCredentials:true\n        }).then(e=>{\n            registerErrors.forEach(error=>{\n                const err = error(e);\n                if (err) errors = [...errors,err];\n\n                if (!errors.length){\n                    currentScreen = CONFIRM_PASSWORD;\n                }\n            })\n        })\n\n\n\n        \n        \n    }\n\n    function confirmPassword(){\n        if (!passwordConfirmation) errors = [...errors,'Please confirm your password'];\n        else if (password!==passwordConfirmation) errors = [...errors,'Passwords do not match'];\n        else{\n                    axios.post(registerUrl,{\n            ['contact-info']:email,\n            password:password\n        },{\n            withCredentials:true\n        }).then(e=>{\n            console.log(e)\n\n            confirmPasswordErrors.forEach(error=>{\n                const err = error(e);\n                if (err) errors = [...errors,err]\n            })\n            if (!errors.length){\n                currentScreen = REGISTER_SUCCESS;\n            }\n        })\n        }\n\n    }\n</script>\n<style>\n    div.loginOrRegister{\n        width:300px;\n    }\n    label{\n        display:flex;\n        justify-content:space-between;\n        margin-bottom:5px;\n    }\n    div.error{\n        background:red;\n    }\n</style>\n\n<div class='loginOrRegister'>\n    {#if currentScreen == LOGIN_REGISTER}\n         <label>\n        E-mail\n        <input bind:value={email} on:keydown={()=>{\n            errors=[];\n        }}/>\n    </label>\n    <label>\n        Password\n        <input type=\"password\" bind:value={password} on:keydown={()=>{\n            errors=[];\n        }}/>\n    </label>\n    {:else if currentScreen == LOGIN_SUCCESS}\n        Login success!\n    {:else if currentScreen == CONFIRM_PASSWORD}\n        <label>\n            Confirm Password\n            <input type=\"password\" bind:value={passwordConfirmation} on:keydown={()=>{\n                errors=[];\n            }}/>\n        </label>\n    {:else if currentScreen == REGISTER_SUCCESS}\n        We are sending a verification email.\n    {/if}\n    \n    {#each errors as error}<div class='error'>{error}</div>{/each}\n    {#if currentScreen == CONFIRM_PASSWORD} <button on:click={confirmPassword}>Confirm</button> <button on:click={()=>{currentScreen=LOGIN_REGISTER}}>Back</button>\n    {:else if currentScreen == LOGIN_REGISTER}<button on:click={login}>Login</button> or <button on:click={register}>Register</button>\n    {/if}\n</div>\n",
    "\n<script>\n\n    import axios from 'axios';\n    \n    let isLoggedIn = false;\n    \n    import { onMount,createEventDispatcher } from 'svelte';\n    const dispatch = createEventDispatcher();\n\n    onMount(()=>{\n        axios.get('/isLoggedIn').then(res=>{\n            console.log(res);\n            isLoggedIn = JSON.parse(res.data); //fancy way of converting \"true\" to true and \"false\" to false\n            if (isLoggedIn) dispatch('loggedIn');\n        });\n    })\n\n</script>\n        <style>\n            a.link{\n                color: inherit; /* blue colors for links too */\n                text-decoration: inherit; /* no underline */\n            }\n\n            div.nga{\n    max-width:200px;\n    margin-left:auto;\n    margin-right:auto;\n}\n\ndiv.nga img{\n    width:100%;\n    \n}\n\n        </style>\n        <header>            \n            <h1><a href=\"/\" class='link'>Wali</a></h1>    \n            <p class='deck'> Welcome to wali<span class='dotfamily'>.family</span>, a service with a different vision for Islamic marriages.</p>   \n        </header>\n        <section class='main'>\n            <slot></slot>\n        </section>\n        <footer>\n            <div class=\"nga\">\n                <img alt=\"No girls allowed\" src=\"./img/nga.png\"/>\n                {#if isLoggedIn}<a href=\"/logout\">Logout</a>{:else}You are not logged in {/if}\n            </div>\n        </footer>\n\n"
  ],
  "names": [],
  "mappings": "AAiBA,6BAAe,CAAC,AACR,OAAO,CAAE,IAAI,CACjB,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,AACvB,CAAC;ACCD,UAAU,cACV,CAAC,AACG,YAAY,KAAK,CACjB,WAAW,IAAI,AACnB,CAAC,AACD,GAAG,cACH,CAAC,AACG,WAAW,CAAE,UAAU,CACvB,UAAU,IAAI,CACd,MAAM,KAAK,AACf,CAAC,AACD,EAAE,cACF,CAAC,AACG,WAAW,CAAE,UAAU,CACvB,UAAU,IAAI,CACd,KAAK,CAAE,OAAO,AAClB,CAAC,AAKD,WAAW,cACX,CAAC,AACG,UAAU,IAAI,CACd,WAAW,CAAE,UAAU,AAC3B,CAAC,AACD,QAAQ,cACR,CAAC,AACG,UAAU,IAAI,AAClB,CAAC;AC/CD,sBAAO,CAAC,AACJ,cAAc,GAAG,AACrB,CAAC,AAED,mBAAI,CAAC,eAAC,CAAC,AACH,QAAQ,KAAK,CACb,cAAc,IAAI,AACtB,CAAC,AAED,uBAAQ,CAAC,AACL,MAAM,IAAI,CACV,UAAU,KAAK,CACf,OAAO,KAAK,AAChB,CAAC;ACAD,gBAAE,CAAC,AACC,WAAW,MAAM,AACrB,CAAC,AAED,uBAAS,CAAC,AACN,QAAQ,IAAI,CACZ,UAAU,IAAI,AAClB,CAAC,AAED,sBAAQ,CAAC,AACL,WAAW,UAAU,CACrB,MAAM,GAAG,CACT,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,CACtB,QAAQ,GAAG,AACf,CAAC;AC9BD,sBAAO,CAAC,AACJ,cAAc,GAAG,AACrB,CAAC,AAED,IAAI,CAAC,eAAC,CAAC,AACH,QAAQ,KAAK,CACb,cAAc,IAAI,AACtB,CAAC,AAED,uBAAQ,CAAC,AACL,MAAM,IAAI,CACV,UAAU,KAAK,CACf,OAAO,KAAK,AAChB,CAAC;AC2FG,GAAG,+BAAgB,CAAC,AAChB,MAAM,KAAK,AACf,CAAC,AACD,oBAAK,CAAC,AACF,QAAQ,IAAI,CACZ,gBAAgB,aAAa,CAC7B,cAAc,GAAG,AACrB,CAAC,AACD,GAAG,qBAAM,CAAC,AACN,WAAW,GAAG,AAClB,CAAC;AC/FO,CAAC,mBAAK,CAAC,AACH,KAAK,CAAE,OAAO,CACd,eAAe,CAAE,OAAO,AAC5B,CAAC,AAED,GAAG,kBAAI,CAAC,AAChB,UAAU,KAAK,CACf,YAAY,IAAI,CAChB,aAAa,IAAI,AACrB,CAAC,AAED,GAAG,kBAAI,CAAC,iBAAG,CAAC,AACR,MAAM,IAAI,AAEd,CAAC"
}